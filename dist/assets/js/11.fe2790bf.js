(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{196:function(t,e,a){"use strict";a.r(e);var r=a(0),_=Object(r.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"诞生背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#诞生背景","aria-hidden":"true"}},[t._v("#")]),t._v(" 诞生背景")]),t._v(" "),a("p",[t._v("这里我们来了解一下为什么需要使用Cookie。目前Cookie主要用来识别身份的凭证，就和我们的身份证类似。有了Cookie，我们就能知道是谁在我们的网站上访问。")]),t._v(" "),a("p",[t._v("以前，前端被称为切图仔，网页也仅仅是查看一些信息，例如门户网站，黄页。所以互联网诞生的时候，并不需要Cookie。随着互联网的发展，慢慢地出现了交互式web应用。")]),t._v(" "),a("p",[t._v("交互式web应用，就是用户可以在网站上进行购物，登录等具有身份辨别的交互。我们都知道HTTP协议的五大特点之一："),a("code",[t._v("无状态")]),t._v("。也就是说，我们发送接口请求，并不知道这个请求是谁发送的。如果用户在我们的网站上购物，如果后端不知道买东西的人是谁，那我们就无法发货给真正购买的用户。这个时候就需要一种方式能识别用户的身份，使得无状态的HTTP请求，能实现有状态。那么Cookie就应运而生了。")]),t._v(" "),a("p",[t._v("我们先来看看HTTP协议的五大特点：")]),t._v(" "),a("h2",{attrs:{id:"http协议的五大特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http协议的五大特点","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP协议的五大特点")]),t._v(" "),a("h3",{attrs:{id:"_1-http协议支持客户端-服务端模式，即为请求-响应模式的协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-http协议支持客户端-服务端模式，即为请求-响应模式的协议","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. http协议支持客户端/服务端模式，即为请求/响应模式的协议")]),t._v(" "),a("p",[t._v("客户端发送一个请求，服务端接收到这个请求后，处理相关逻辑，然后生成响应，返回给客户端")]),t._v(" "),a("h3",{attrs:{id:"_2-无连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-无连接","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 无连接")]),t._v(" "),a("p",[t._v("客户端向服务端发送请求，当服务端接收到请求后，发送响应给客户端，同时客户端通知服务端接收完响应后，服务端断开该连接。即服务端每次连接只处理一次请求，从而节省资源。")]),t._v(" "),a("p",[t._v("无连接的特点，互联网发展的过程中渐渐地成为网站性能的瓶颈，连接/断开在大流量的时候，特别消耗性能，增加网站首屏显示的时间。http 1.1的版本默认开启keep-alive来保持连接存活一段时间，来解决这个问题。http协议更多的知识点，将在后续的文章中分享。")]),t._v(" "),a("h3",{attrs:{id:"_3-无状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-无状态","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 无状态")]),t._v(" "),a("p",[t._v("http协议对事务没有记忆能力，即每个连接(请求/响应)都是独立的，如果A请求需要B请求的数据，那个只能在A请求中，把B请求的数据再一次的传递到服务端，这会造成请求不安全以及数据臃肿。为了解决http协议无状态带来的问题，目前有三种解决方案，一种是Cookie，一种是Session，还普遍用户APP端的token机制(JWT等)。")]),t._v(" "),a("h3",{attrs:{id:"_4-简单快速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-简单快速","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 简单快速")]),t._v(" "),a("p",[t._v("发送一个请求，只要一个资源的路径(接口URL)和请求的method(GET, POST, PUT等)，就可以完成一次请求/响应")]),t._v(" "),a("h3",{attrs:{id:"_5-灵活"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-灵活","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. 灵活")]),t._v(" "),a("p",[t._v("http协议可以发送任意类型的数据，只需要在请求头部改变"),a("code",[t._v("content-type")]),t._v("。传输png图片：content-type: image/png; 传输html文件：content-type: text/html; 指定"),a("code",[t._v("content-type")]),t._v("类型，就可以传输改类型的数据；"),a("code",[t._v("content-type")]),t._v("类型的取值范围："),a("a",{attrs:{href:"http://www.w3school.com.cn/media/media_mimeref.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击查看"),a("OutboundLink")],1)])])},[],!1,null,null,null);e.default=_.exports}}]);